[Unit]
Description=Install Scalock Gateway
After=docker.service bootstrap.service
Requires=docker.service


[Service]
User=core
TimeoutStartSec=0
Environment="IMAGE=etcdctl get /images/scalock-gateway"
Environment="DB_PASSWORD=etcdctl get /environment/RDSPASSWORD"
Environment="DB_USERNAME=etcdctl get /flight-director/config/db-username"
Environment="SCALOCK_DBNAME=etcdctl get /aqua/config/db-name"
Environment="SCALOCK_DB_ENDPOINT=etcdctl get /aqua/config/db-path"
Environment="SCALOCK_AUDIT_DBNAME=etcdctl get /aqua-audit/config/db-name"
Environment="SCALOCK_AUDIT_DB_ENDPOINT=etcdctl get /aqua-audit/config/db-path"

ExecStartPre=/usr/bin/sh -c \
"if [[ -f /etc/profile.d/etcdctl.sh ]]; then source /etc/profile.d/etcdctl.sh;fi && docker pull scalock/scalock-gateway:stable"
ExecStartPre=/usr/bin/sh -c "docker pull $($IMAGE)"
ExecStartPre=-/usr/bin/docker kill scalock-gateway
ExecStartPre=-/usr/bin/docker rm scalock-gateway


ExecStart=/usr/bin/bash -c \
"if [[ -f /etc/profile.d/etcdctl.sh ]]; then source /etc/profile.d/etcdctl.sh;fi && \
  sudo docker run -d -p 3622:3622 --name scalock-gateway  \
  -e SCALOCK_DBUSER=$($DB_USERNAME)  \
  -e SCALOCK_DBPASSWORD=$($DB_PASSWORD)   \
  -e SCALOCK_DBNAME=$($SCALOCK_DBNAME)    \
  -e SCALOCK_DBHOST=$($SCALOCK_DB_ENDPOINT) \
  -e SCALOCK_AUDIT_DBUSER=$($DB_USERNAME)  \
  -e SCALOCK_AUDIT_DBPASSWORD=$($DB_PASSWORD)   \
  -e SCALOCK_AUDIT_DBNAME=$($SCALOCK_AUDIT_DBNAME)    \
  -e SCALOCK_AUDIT_DBHOST=$($SCALOCK_AUDIT_DB_ENDPOINT)
  $($IMAGE)"

[X-Fleet]
Global=true

